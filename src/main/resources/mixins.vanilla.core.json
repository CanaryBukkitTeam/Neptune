{
    "required": true,
    "minVersion": "0.7",
    "package": "org.neptunepowered.vanilla.mixin.core",
    "refmap": "mixins.vanilla.refmap.json",
    "compatibilityLevel": "JAVA_8",
    "mixins": [
        "block.material.MixinMapColor",
        "block.material.MixinMaterial",
        "block.MixinBlock",
        "command.server.MixinCommandBlockLogic",
        "command.MixinCommandHandler",
        "command.MixinICommandSender",
        "command.MixinServerCommandManager",
        "crash.MixinCrashReport",
        "entity.ai.attributes.MixinAttributeModifier",
        "entity.ai.attributes.MixinBaseAttribute",
        "entity.ai.attributes.MixinBaseAttributeMap",
        "entity.ai.attributes.MixinIAttributeInstance",
        "entity.ai.attributes.MixinModifiableAttributeInstance",
        "entity.ai.attributes.MixinRangedAttribute",
        "entity.ai.MixinEntityAIArrowAttack",
        "entity.ai.MixinEntityAIAttackOnCollide",
        "entity.ai.MixinEntityAIAvoidEntity",
        "entity.ai.MixinEntityAIBase",
        "entity.ai.MixinEntityAIBeg",
        "entity.ai.MixinEntityAIBreakDoor",
        "entity.ai.MixinEntityAIControlledByPlayer",
        "entity.ai.MixinEntityAICreeperSwell",
        "entity.ai.MixinEntityAIDefendVillage",
        "entity.ai.MixinEntityAIEatGrass",
        "entity.ai.MixinEntityAIFindEntityNearestPlayer",
        "entity.ai.MixinEntityAIFleeSun",
        "entity.ai.MixinEntityAIFollowGolem",
        "entity.ai.MixinEntityAIFollowOwner",
        "entity.ai.MixinEntityAIFollowParent",
        "entity.ai.MixinEntityAIHarvestFarmland",
        "entity.ai.MixinEntityAILeapAtTarget",
        "entity.ai.MixinEntityAILookAtTradePlayer",
        "entity.ai.MixinEntityAILookAtVillager",
        "entity.ai.MixinEntityAILookIdle",
        "entity.ai.MixinEntityAIMate",
        "entity.ai.MixinEntityAIMoveIndoors",
        "entity.ai.MixinEntityAIMoveThroughVillage",
        "entity.ai.MixinEntityAIMoveTowardsRestriction",
        "entity.ai.MixinEntityAIMoveTowardsTarget",
        "entity.ai.MixinEntityAITasks",
        "entity.effect.MixinEntityLightningBolt",
        "entity.effect.MixinEntityWeatherEffect",
        "entity.item.MixinEntityArmorStand",
        "entity.item.MixinEntityExpBottle",
        "entity.item.MixinEntityFireworkRocket",
        "entity.item.MixinEntityItem",
        "entity.item.MixinEntityItemFrame",
        "entity.item.MixinEntityMinecart",
        "entity.item.MixinEntityMinecartChest",
        "entity.item.MixinEntityMinecartContainer",
        "entity.item.MixinEntityMinecartHopper",
        "entity.item.MixinEntityPainting",
        "entity.item.MixinEntityTNTPrimed",
        "entity.item.MixinEntityXPOrb",
        "entity.monster.MixinEntityBlaze",
        "entity.monster.MixinEntityCaveSpider",
        "entity.monster.MixinEntityCreeper",
        "entity.monster.MixinEntityEnderman",
        "entity.monster.MixinEntityEndermanAIPlaceBlock",
        "entity.monster.MixinEntityEndermanAITakeBlock",
        "entity.monster.MixinEntityEndermite",
        "entity.monster.MixinEntityGiantZombie",
        "entity.monster.MixinEntityGolem",
        "entity.monster.MixinEntityGuardian",
        "entity.monster.MixinEntityIronGolem",
        "entity.monster.MixinEntityMagmaCube",
        "entity.monster.MixinEntityMob",
        "entity.monster.MixinEntitySkeleton",
        "entity.monster.MixinEntitySlime",
        "entity.monster.MixinEntitySpider",
        "entity.monster.MixinEntityWitch",
        "entity.monster.MixinEntityZombie",
        "entity.passive.MixinEntityAmbientCreature",
        "entity.passive.MixinEntityAnimal",
        "entity.passive.MixinEntityBat",
        "entity.passive.MixinEntityChicken",
        "entity.passive.MixinEntityCow",
        "entity.passive.MixinEntityHorse",
        "entity.passive.MixinEntityMooshroom",
        "entity.passive.MixinEntityPig",
        "entity.passive.MixinEntityRabbit",
        "entity.passive.MixinEntitySheep",
        "entity.passive.MixinEntitySquid",
        "entity.passive.MixinEntityWaterMob",
        "entity.player.MixinEntityPlayer",
        "entity.player.MixinEntityPlayerMP",
        "entity.player.MixinInventoryPlayer",
        "entity.player.MixinPlayerCapabilities",
        "entity.projectile.MixinEntityArrow",
        "entity.projectile.MixinEntityEgg",
        "entity.projectile.MixinEntityFireball",
        "entity.projectile.MixinEntitySmallFireball",
        "entity.projectile.MixinEntitySnowball",
        "entity.projectile.MixinEntityThrowable",
        "entity.projectile.MixinEntityWitherSkull",
        "entity.MixinEntity",
        "entity.MixinEntityAgeable",
        "entity.MixinEntityCreature",
        "entity.MixinEntityHanging",
        "entity.MixinEntityLeashKnot",
        "entity.MixinEntityLiving",
        "entity.MixinEntityLivingBase",
        "entity.MixinEntityTracker",
        "entity.MixinProjectile",
        "event.MixinClickEvent",
        "event.MixinClickEventAction",
        "event.MixinHoverEvent",
        "event.MixinHoverEventAction",
        "inventory.MixinAnimalChest",
        "inventory.MixinIInventory",
        "inventory.MixinInventoryEnderChest",
        "inventory.MixinInventoryMerchant",
        "item.crafting.MixinIRecipe",
        "item.crafting.MixinShapedRecipes",
        "item.crafting.MixinShapelessRecipes",
        "item.MixinItem",
        "item.MixinItemStack",
        "nbt.MixinNBTBase",
        "nbt.MixinNBTPrimitive",
        "nbt.MixinNBTTagByte",
        "nbt.MixinNBTTagByteArray",
        "nbt.MixinNBTTagCompound",
        "nbt.MixinNBTTagDouble",
        "nbt.MixinNBTTagFloat",
        "nbt.MixinNBTTagInt",
        "nbt.MixinNBTTagIntArray",
        "nbt.MixinNBTTagLong",
        "nbt.MixinNBTTagShort",
        "nbt.MixinNBTTagString",
        "network.handshake.client.AccessorC00Handshake",
        "network.play.server.MixinS23PacketBlockChange",
        "network.MixinNetHandlerPlayServer",
        "network.MixinNetworkManager",
        "network.MixinPacket",
        "pathfinding.MixinPathNavigate",
        "potion.MixinPotion",
        "potion.MixinPotionEffect",
        "scoreboard.MixinIScoreObjectiveCriteria",
        "scoreboard.MixinScore",
        "scoreboard.MixinScoreboard",
        "scoreboard.MixinScoreObjective",
        "scoreboard.MixinScorePlayerTeam",
        "server.dedicated.MixinConsoleHandler",
        "server.dedicated.MixinDedicatedServer",
        "server.management.MixinItemInWorldManager",
        "server.management.MixinServerConfigurationManager",
        "server.network.MixinNetHandlerHandshakeTCP",
        "server.network.MixinNetHandlerStatusServer",
        "server.MixinMinecraftServer",
        "stats.MixinAchievement",
        "stats.MixinStatBase",
        "stats.MixinStatisticsFile",
        "tileentity.MixinIHopper",
        "tileentity.MixinMobSpawnerBaseLogic",
        "tileentity.MixinTileEntity",
        "tileentity.MixinTileEntityBeacon",
        "tileentity.MixinTileEntityBrewingStand",
        "tileentity.MixinTileEntityChest",
        "tileentity.MixinTileEntityComparator",
        "tileentity.MixinTileEntityDaylightDetector",
        "tileentity.MixinTileEntityDispenser",
        "tileentity.MixinTileEntityDropper",
        "tileentity.MixinTileEntityHopper",
        "tileentity.MixinTileEntityJukebox",
        "tileentity.MixinTileEntityLockable",
        "tileentity.MixinTileEntityMobSpawner",
        "tileentity.MixinTileEntitySign",
        "tileentity.MixinTileEntitySkull",
        "util.AccessorFoodStats",
        "util.MixinAxisAlignedBB",
        "util.MixinChatComponentText",
        "util.MixinChatStyle",
        "util.MixinDamageSource",
        "util.MixinEnumChatFormatting",
        "util.MixinIChatComponent",
        "village.MixinMerchantRecipe",
        "village.MixinVillage",
        "world.biome.MixinBiomeGenBase",
        "world.chunk.MixinChunk",
        "world.gen.MixinChunkProviderServer",
        "world.storage.MixinSaveHandler",
        "world.storage.MixinWorldInfo",
        "world.AccessorWorld",
        "world.MixinWorld",
        "world.MixinWorldProvider",
        "world.MixinWorldServer"
    ],
    "injectors": {
        "defaultRequire": 1
    }
}
